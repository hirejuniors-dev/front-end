{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/harshil/projects/hirejuniors.dev/frontend/components/SearchInput.js\";\nimport { connectSearchBox } from 'react-instantsearch-dom';\n\nconst SearchBox = ({\n  currentRefinement,\n  isSearchStalled,\n  refine\n}) => /*#__PURE__*/_jsxDEV(\"form\", {\n  noValidate: true,\n  action: \"\",\n  role: \"searct\",\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"search\",\n    value: currentRefinement,\n    onChange: event => refine(event.currentTarget.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => refine(''),\n    children: \"Reset query\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), isSearchStalled ? 'My search is stalled' : '']\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n\nconst Search = connectSearchBox(SearchBox);\nexport default Search;","map":{"version":3,"sources":["/Users/harshil/projects/hirejuniors.dev/frontend/components/SearchInput.js"],"names":["connectSearchBox","SearchBox","currentRefinement","isSearchStalled","refine","event","currentTarget","value","Search"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,yBAAjC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,iBAAF;AAAqBC,EAAAA,eAArB;AAAsCC,EAAAA;AAAtC,CAAD,kBAChB;AAAM,EAAA,UAAU,MAAhB;AAAiB,EAAA,MAAM,EAAC,EAAxB;AAA2B,EAAA,IAAI,EAAC,QAAhC;AAAA,0BACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAEF,iBAFT;AAGE,IAAA,QAAQ,EAAGG,KAAD,IAAWD,MAAM,CAACC,KAAK,CAACC,aAAN,CAAoBC,KAArB;AAH7B;AAAA;AAAA;AAAA;AAAA,UADF,eAME;AAAQ,IAAA,OAAO,EAAE,MAAMH,MAAM,CAAC,EAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,EAOGD,eAAe,GAAG,sBAAH,GAA4B,EAP9C;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAYA,MAAMK,MAAM,GAAGR,gBAAgB,CAACC,SAAD,CAA/B;AAEA,eAAeO,MAAf","sourcesContent":["import { connectSearchBox } from 'react-instantsearch-dom';\n\nconst SearchBox = ({ currentRefinement, isSearchStalled, refine }) => (\n  <form noValidate action=\"\" role=\"searct\">\n    <input\n      type=\"search\"\n      value={currentRefinement}\n      onChange={(event) => refine(event.currentTarget.value)}\n    />\n    <button onClick={() => refine('')}>Reset query</button>\n    {isSearchStalled ? 'My search is stalled' : ''}\n  </form>\n);\n\nconst Search = connectSearchBox(SearchBox);\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}